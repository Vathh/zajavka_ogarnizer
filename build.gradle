plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.openapi.generator' version '6.6.0'
}

group = 'pl'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-reactor-netty:3.1.2"
	implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.2'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	//db
	implementation 'org.flywaydb:flyway-core'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'

	//api
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0"
	implementation "org.openapitools:jackson-databind-nullable:0.2.6"

	//annotations
	compileOnly 'org.projectlombok:lombok:1.18.28'
	implementation "io.swagger:swagger-annotations:1.6.11"
	implementation "org.realityforge.javax.annotation:javax.annotation:1.0.1"
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation "javax.annotation:javax.annotation-api:1.3.2"
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.mockito:mockito-core:5.4.0'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:1.18.3"
	}
}

openApiGenerate {
	generatorName = "java"
	library = "webclient"
	configOptions = [
		serializableModel: "true",
		dateLibrary: "java8-localdatetime",
		serializationLibrary: "jackson"
	]

	outputDir = "$buildDir/generated-sources/openapi".toString()
	inputSpec = "$rootDir/src/main/resources/ogarnizerAPI.json".toString()
	apiPackage = "pl.ogarnizer.infrastructure.ogarnizerAPI.api"
	modelPackage = "pl.ogarnizer.infrastructure.ogarnizerAPI.model"
}

sourceSets {
	main {
		java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
	}
}

compileJava.dependsOn tasks.openApiGenerate

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

bootJar {
	archiveFileName = "ogarnizerTest.${archiveExtension.get()}"
}
